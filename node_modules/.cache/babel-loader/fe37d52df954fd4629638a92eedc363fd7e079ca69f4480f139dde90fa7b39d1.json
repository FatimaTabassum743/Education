{"ast":null,"code":"// Local Storage Service with CSV Export\n// Stores data locally and allows Excel export\n\nclass LocalStorageService {\n  constructor() {\n    this.storageKey = process.env.REACT_APP_LOCALSTORAGE_KEY || 'fiesta_form_submissions';\n  }\n\n  // Add new form submission to local storage\n  async addFormData(formData) {\n    try {\n      const submissions = this.getSubmissions();\n      const newSubmission = {\n        id: Date.now().toString(),\n        timestamp: new Date().toISOString(),\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone || 'Not provided',\n        age: formData.age || 'Not provided',\n        country: formData.country || 'Not provided',\n        course: formData.course || 'General Inquiry',\n        message: formData.message || 'No message provided',\n        type: formData.demo === 'Yes' ? 'demo' : 'inquiry',\n        status: 'new' // Use lowercase status values\n      };\n      submissions.unshift(newSubmission); // Add to beginning\n      localStorage.setItem(this.storageKey, JSON.stringify(submissions));\n      return newSubmission;\n    } catch (error) {\n      console.error('Error saving to local storage:', error);\n      throw error;\n    }\n  }\n\n  // Get all form submissions\n  async getFormData() {\n    try {\n      return this.getSubmissions();\n    } catch (error) {\n      console.error('Error fetching from local storage:', error);\n      throw error;\n    }\n  }\n\n  // Update status of a submission\n  async updateStatus(submissionId, status) {\n    try {\n      const submissions = this.getSubmissions();\n      const submissionIndex = submissions.findIndex(s => s.id === submissionId);\n      if (submissionIndex !== -1) {\n        submissions[submissionIndex].status = status.toLowerCase(); // Ensure lowercase\n        localStorage.setItem(this.storageKey, JSON.stringify(submissions));\n        return submissions[submissionIndex];\n      }\n      throw new Error('Submission not found');\n    } catch (error) {\n      console.error('Error updating status:', error);\n      throw error;\n    }\n  }\n\n  // Get submissions from localStorage\n  getSubmissions() {\n    const stored = localStorage.getItem(this.storageKey);\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  // Export to CSV for Excel\n  exportToCSV() {\n    const submissions = this.getSubmissions();\n    if (submissions.length === 0) {\n      alert('No data to export');\n      return;\n    }\n    const headers = ['Timestamp', 'Name', 'Email', 'Phone', 'Age', 'Country', 'Course', 'Message', 'Type', 'Status'];\n    const csvContent = [headers.join(','), ...submissions.map(submission => [submission.timestamp, `\"${submission.name}\"`, submission.email, `\"${submission.phone}\"`, submission.age, `\"${submission.country}\"`, `\"${submission.course}\"`, `\"${submission.message}\"`, submission.type, submission.status].join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `genzlearner-form-data-${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  // Clear all data or specific entry\n  clearData(id = null) {\n    if (id) {\n      // Delete specific entry\n      const submissions = this.getSubmissions();\n      const filteredSubmissions = submissions.filter(s => s.id !== id);\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredSubmissions));\n    } else {\n      // Clear all data\n      localStorage.removeItem(this.storageKey);\n    }\n  }\n\n  // Get statistics\n  getStats() {\n    const submissions = this.getSubmissions();\n    return {\n      total: submissions.length,\n      new: submissions.filter(s => s.status === 'new').length,\n      contacted: submissions.filter(s => s.status === 'contacted').length,\n      completed: submissions.filter(s => s.status === 'completed').length,\n      demo: submissions.filter(s => s.type === 'demo').length\n    };\n  }\n}\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;","map":{"version":3,"names":["LocalStorageService","constructor","storageKey","process","env","REACT_APP_LOCALSTORAGE_KEY","addFormData","formData","submissions","getSubmissions","newSubmission","id","Date","now","toString","timestamp","toISOString","name","email","phone","age","country","course","message","type","demo","status","unshift","localStorage","setItem","JSON","stringify","error","console","getFormData","updateStatus","submissionId","submissionIndex","findIndex","s","toLowerCase","Error","stored","getItem","parse","exportToCSV","length","alert","headers","csvContent","join","map","submission","blob","Blob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","split","style","visibility","body","appendChild","click","removeChild","clearData","filteredSubmissions","filter","removeItem","getStats","total","new","contacted","completed","localStorageService"],"sources":["C:/Users/44757/OneDrive/Desktop/GenZLearner/src/services/localStorageService.js"],"sourcesContent":["// Local Storage Service with CSV Export\r\n// Stores data locally and allows Excel export\r\n\r\nclass LocalStorageService {\r\n  constructor() {\r\n    this.storageKey = process.env.REACT_APP_LOCALSTORAGE_KEY || 'fiesta_form_submissions';\r\n  }\r\n\r\n  // Add new form submission to local storage\r\n  async addFormData(formData) {\r\n    try {\r\n      const submissions = this.getSubmissions();\r\n      \r\n      const newSubmission = {\r\n        id: Date.now().toString(),\r\n        timestamp: new Date().toISOString(),\r\n        name: formData.name,\r\n        email: formData.email,\r\n        phone: formData.phone || 'Not provided',\r\n        age: formData.age || 'Not provided',\r\n        country: formData.country || 'Not provided',\r\n        course: formData.course || 'General Inquiry',\r\n        message: formData.message || 'No message provided',\r\n        type: formData.demo === 'Yes' ? 'demo' : 'inquiry',\r\n        status: 'new' // Use lowercase status values\r\n      };\r\n\r\n      submissions.unshift(newSubmission); // Add to beginning\r\n      localStorage.setItem(this.storageKey, JSON.stringify(submissions));\r\n\r\n      return newSubmission;\r\n    } catch (error) {\r\n      console.error('Error saving to local storage:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get all form submissions\r\n  async getFormData() {\r\n    try {\r\n      return this.getSubmissions();\r\n    } catch (error) {\r\n      console.error('Error fetching from local storage:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Update status of a submission\r\n  async updateStatus(submissionId, status) {\r\n    try {\r\n      const submissions = this.getSubmissions();\r\n      const submissionIndex = submissions.findIndex(s => s.id === submissionId);\r\n      \r\n      if (submissionIndex !== -1) {\r\n        submissions[submissionIndex].status = status.toLowerCase(); // Ensure lowercase\r\n        localStorage.setItem(this.storageKey, JSON.stringify(submissions));\r\n        return submissions[submissionIndex];\r\n      }\r\n      \r\n      throw new Error('Submission not found');\r\n    } catch (error) {\r\n      console.error('Error updating status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get submissions from localStorage\r\n  getSubmissions() {\r\n    const stored = localStorage.getItem(this.storageKey);\r\n    return stored ? JSON.parse(stored) : [];\r\n  }\r\n\r\n  // Export to CSV for Excel\r\n  exportToCSV() {\r\n    const submissions = this.getSubmissions();\r\n    \r\n    if (submissions.length === 0) {\r\n      alert('No data to export');\r\n      return;\r\n    }\r\n\r\n    const headers = [\r\n      'Timestamp',\r\n      'Name',\r\n      'Email', \r\n      'Phone',\r\n      'Age',\r\n      'Country',\r\n      'Course',\r\n      'Message',\r\n      'Type',\r\n      'Status'\r\n    ];\r\n\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...submissions.map(submission => [\r\n        submission.timestamp,\r\n        `\"${submission.name}\"`,\r\n        submission.email,\r\n        `\"${submission.phone}\"`,\r\n        submission.age,\r\n        `\"${submission.country}\"`,\r\n        `\"${submission.course}\"`,\r\n        `\"${submission.message}\"`,\r\n        submission.type,\r\n        submission.status\r\n      ].join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    \r\n    if (link.download !== undefined) {\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `genzlearner-form-data-${new Date().toISOString().split('T')[0]}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  }\r\n\r\n  // Clear all data or specific entry\r\n  clearData(id = null) {\r\n    if (id) {\r\n      // Delete specific entry\r\n      const submissions = this.getSubmissions();\r\n      const filteredSubmissions = submissions.filter(s => s.id !== id);\r\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredSubmissions));\r\n    } else {\r\n      // Clear all data\r\n      localStorage.removeItem(this.storageKey);\r\n    }\r\n  }\r\n\r\n  // Get statistics\r\n  getStats() {\r\n    const submissions = this.getSubmissions();\r\n    return {\r\n      total: submissions.length,\r\n      new: submissions.filter(s => s.status === 'new').length,\r\n      contacted: submissions.filter(s => s.status === 'contacted').length,\r\n      completed: submissions.filter(s => s.status === 'completed').length,\r\n      demo: submissions.filter(s => s.type === 'demo').length\r\n    };\r\n  }\r\n}\r\n\r\nconst localStorageService = new LocalStorageService();\r\nexport default localStorageService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}