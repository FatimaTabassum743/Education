{"ast":null,"code":"// Cache clearing utilities to prevent blank page issues\nexport const clearAllCaches=async()=>{try{// Clear browser cache\nif('caches'in window){const cacheNames=await caches.keys();await Promise.all(cacheNames.map(cacheName=>caches.delete(cacheName)));console.log('Browser caches cleared');}// Clear localStorage\nlocalStorage.clear();console.log('LocalStorage cleared');// Clear sessionStorage\nsessionStorage.clear();console.log('SessionStorage cleared');// Unregister service worker\nif('serviceWorker'in navigator){const registrations=await navigator.serviceWorker.getRegistrations();await Promise.all(registrations.map(registration=>registration.unregister()));console.log('Service workers unregistered');}return true;}catch(error){console.error('Error clearing caches:',error);return false;}};export const forceReload=()=>{// Force reload without cache\nwindow.location.reload(true);};export const addCacheBustingToUrl=url=>{const timestamp=Date.now();const separator=url.includes('?')?'&':'?';return\"\".concat(url).concat(separator,\"_t=\").concat(timestamp);};// Auto-clear cache on development\nif(process.env.NODE_ENV==='development'){// Clear cache every 5 minutes in development\nsetInterval(()=>{if('caches'in window){caches.keys().then(cacheNames=>{cacheNames.forEach(cacheName=>caches.delete(cacheName));});}},5*60*1000);}","map":{"version":3,"names":["clearAllCaches","window","cacheNames","caches","keys","Promise","all","map","cacheName","delete","console","log","localStorage","clear","sessionStorage","navigator","registrations","serviceWorker","getRegistrations","registration","unregister","error","forceReload","location","reload","addCacheBustingToUrl","url","timestamp","Date","now","separator","includes","concat","process","env","NODE_ENV","setInterval","then","forEach"],"sources":["C:/Users/44757/OneDrive/Desktop/GenZ/Education/src/utils/cacheUtils.js"],"sourcesContent":["// Cache clearing utilities to prevent blank page issues\r\n\r\nexport const clearAllCaches = async () => {\r\n  try {\r\n    // Clear browser cache\r\n    if ('caches' in window) {\r\n      const cacheNames = await caches.keys();\r\n      await Promise.all(\r\n        cacheNames.map(cacheName => caches.delete(cacheName))\r\n      );\r\n      console.log('Browser caches cleared');\r\n    }\r\n\r\n    // Clear localStorage\r\n    localStorage.clear();\r\n    console.log('LocalStorage cleared');\r\n\r\n    // Clear sessionStorage\r\n    sessionStorage.clear();\r\n    console.log('SessionStorage cleared');\r\n\r\n    // Unregister service worker\r\n    if ('serviceWorker' in navigator) {\r\n      const registrations = await navigator.serviceWorker.getRegistrations();\r\n      await Promise.all(\r\n        registrations.map(registration => registration.unregister())\r\n      );\r\n      console.log('Service workers unregistered');\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error clearing caches:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const forceReload = () => {\r\n  // Force reload without cache\r\n  window.location.reload(true);\r\n};\r\n\r\nexport const addCacheBustingToUrl = (url) => {\r\n  const timestamp = Date.now();\r\n  const separator = url.includes('?') ? '&' : '?';\r\n  return `${url}${separator}_t=${timestamp}`;\r\n};\r\n\r\n// Auto-clear cache on development\r\nif (process.env.NODE_ENV === 'development') {\r\n  // Clear cache every 5 minutes in development\r\n  setInterval(() => {\r\n    if ('caches' in window) {\r\n      caches.keys().then(cacheNames => {\r\n        cacheNames.forEach(cacheName => caches.delete(cacheName));\r\n      });\r\n    }\r\n  }, 5 * 60 * 1000);\r\n}\r\n"],"mappings":"AAAA;AAEA,MAAO,MAAM,CAAAA,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF;AACA,GAAI,QAAQ,EAAI,CAAAC,MAAM,CAAE,CACtB,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAAC,MAAM,CAACC,IAAI,CAAC,CAAC,CACtC,KAAM,CAAAC,OAAO,CAACC,GAAG,CACfJ,UAAU,CAACK,GAAG,CAACC,SAAS,EAAIL,MAAM,CAACM,MAAM,CAACD,SAAS,CAAC,CACtD,CAAC,CACDE,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACvC,CAEA;AACAC,YAAY,CAACC,KAAK,CAAC,CAAC,CACpBH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAEnC;AACAG,cAAc,CAACD,KAAK,CAAC,CAAC,CACtBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAErC;AACA,GAAI,eAAe,EAAI,CAAAI,SAAS,CAAE,CAChC,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAD,SAAS,CAACE,aAAa,CAACC,gBAAgB,CAAC,CAAC,CACtE,KAAM,CAAAb,OAAO,CAACC,GAAG,CACfU,aAAa,CAACT,GAAG,CAACY,YAAY,EAAIA,YAAY,CAACC,UAAU,CAAC,CAAC,CAC7D,CAAC,CACDV,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CAEA,MAAO,KAAI,CACb,CAAE,MAAOU,KAAK,CAAE,CACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,MAAK,CACd,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B;AACArB,MAAM,CAACsB,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAC,oBAAoB,CAAIC,GAAG,EAAK,CAC3C,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAC5B,KAAM,CAAAC,SAAS,CAAGJ,GAAG,CAACK,QAAQ,CAAC,GAAG,CAAC,CAAG,GAAG,CAAG,GAAG,CAC/C,SAAAC,MAAA,CAAUN,GAAG,EAAAM,MAAA,CAAGF,SAAS,QAAAE,MAAA,CAAML,SAAS,EAC1C,CAAC,CAED;AACA,GAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1C;AACAC,WAAW,CAAC,IAAM,CAChB,GAAI,QAAQ,EAAI,CAAAnC,MAAM,CAAE,CACtBE,MAAM,CAACC,IAAI,CAAC,CAAC,CAACiC,IAAI,CAACnC,UAAU,EAAI,CAC/BA,UAAU,CAACoC,OAAO,CAAC9B,SAAS,EAAIL,MAAM,CAACM,MAAM,CAACD,SAAS,CAAC,CAAC,CAC3D,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAAC,CAAG,EAAE,CAAG,IAAI,CAAC,CACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}